package interaction

import (
	"strings"
	"strconv"
	"log"

	"meetping/internal/service/likes"
	"meetping/internal/service/rsvp"
	"meetping/internal/service/digest"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func HandleCallback(bot *tgbotapi.BotAPI, callback *tgbotapi.CallbackQuery) {
	data := callback.Data
	userID := callback.From.ID

	switch {
	case strings.HasPrefix(data, "like_"):
		eventID, _ := strconv.ParseInt(strings.TrimPrefix(data, "like_"), 10, 64)
		liked := likes.ToggleLike(userID, eventID)
		response := "–í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ ‚ù§Ô∏è"
		if !liked {
			response = "–í—ã —É–±—Ä–∞–ª–∏ ‚ù§Ô∏è"
		}
		bot.AnswerCallbackQuery(tgbotapi.NewCallback(callback.ID, response))

	case strings.HasPrefix(data, "going_"):
		eventID, _ := strconv.ParseInt(strings.TrimPrefix(data, "going_"), 10, 64)
		going := rsvp.ToggleGoing(userID, eventID)
		if going {
			likes.ToggleLike(userID, eventID) // –∞–≤—Ç–æ–ª–∞–π–∫
		}
		response := "–í—ã –æ—Ç–º–µ—Ç–∏–ª–∏—Å—å –∫–∞–∫ –∏–¥—É—â–∏–π üö∂"
		if !going {
			response = "–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —É—á–∞—Å—Ç–∏–µ"
		}
		bot.AnswerCallbackQuery(tgbotapi.NewCallback(callback.ID, response))

	case data == "repeat_digest":
		digest.HandleRepeat(bot, userID)
		bot.AnswerCallbackQuery(tgbotapi.NewCallback(callback.ID, "–î–∞–π–¥–∂–µ—Å—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"))

	default:
		log.Println("Unknown callback:", data)
	}
}
